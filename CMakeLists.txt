cmake_minimum_required(VERSION 3.10)

project(patchchk VERSION 1)

set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED True)
set(CMAKE_OSX_ARCHITECTURES "arm64;x86_64")
set(CPACK_GENERATOR "ZIP")
set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY OFF)
set(CPACK_VERBATIM_VARIABLES YES)
set(CPACK_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}-v${CMAKE_PROJECT_VERSION}")

if (WIN32)
	set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-windows")
elseif (UNIX)
	if (APPLE)
		set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-macos")
	else()
		string(MY_OS_NAME TOLOWER ${CMAKE_SYSTEM_NAME})
		set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-${MY_OS_NAME}-${CMAKE_SYSTEM_PROCESSOR}")
	endif()
endif()

message("CPACK_PACKAGE_FILE_NAME=${CPACK_PACKAGE_FILE_NAME}")

if (MSVC)
	add_compile_options(/W4 /DVERSION="${CMAKE_PROJECT_VERSION}" /D_CRT_SECURE_NO_WARNINGS)
else()
	add_compile_options(-Wall -Wextra -DVERSION="${CMAKE_PROJECT_VERSION}")
endif()

add_executable(patchchk patchchk.c)

install(TARGETS patchchk
	DESTINATION .
)

include(CPack)


